[hub]
	protocol = https

[user]
	signingkey = 760B7805

[commit]
	gpgsign = true

[branch]
	autosetupmerge = true

[diff]
	rename = copy
	suppress-blank-empty = true
	renamelimit = 0
	algorithm = patience
	tool = code

[fetch]
	recurseSubmodules = true

[difftool "code"]
	cmd = code --wait --diff $LOCAL $REMOTE

[log]
	date = iso
	decorate = short
	abbrevCommit = true

[status]
	relativePaths = false
	submodulesummary = true

[http]
	cookiefile = ~/.gitcookies

[credential]
	helper = store

[alias]
	st = status --short --untracked-files=no

	d = diff -p -b -w --ignore-space-at-eol --src-prefix=old/ --dst-prefix=new/
	dlast = !git d HEAD~1
	cdiff = !git d --cached
	hdiff = !git d HEAD

	master = !git checkout master && git pull
	merge-master = !git fetch origin master && git merge origin/master -m 'master sync'
	stash-and-merge = !git stash && git merge-master && git stash pop
	stash-and-pull = !git stash && git pull && git stash pop
	stash-and-pull-master = !git stash && git master && git stash pop
	new-branch = "!f() { git stash &>/dev/null ; git checkout -b $@ && git stash pop &>/dev/null; }; f"
	sam = !git stash-and-merge
	sap = !git stash-and-pull
	sapm = !git stash-and-pull-master
	nb = !git new-branch

	grep-all = "!f() { git grep -ni $@ `git for-each-ref --format='%(refname)' refs/` | perl -pe 's@refs/[^/]+/@@g'; }; f"
	g = grep --break --heading --line-number

	list-old-branches = "!git branch --merged | perl -ne 's/^\\*\\s+//g; print unless /master|dev/'"

	delete-merged-branches = "!git branch -d $(git list-old-branches) && git remote prune origin"

	clean-old = "!f() { git delete-merged-branches; du -h --max-depth=0 .git && git reflog expire --all --expire=now && git gc --prune=now --aggressive; du -h --max-depth=0 .git; }; f"

	fuck = !git reset --hard && git pull

	ignore = update-index --assume-unchanged
	unignore = update-index --no-assume-unchanged
	ignored = !git ls-files -v | grep "^[[:lower:]]"
	gc-all = git -c gc.reflogExpire=0 -c gc.reflogExpireUnreachable=0 -c gc.rerereresolved=0 -c gc.rerereunresolved=0 -c gc.pruneExpire=now gc --aggressive

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f

[advice]
	detachedHead = no

[pull]
	rebase = false
